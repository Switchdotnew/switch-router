{
  "credentialStores": {
    "openai-api": {
      "type": "simple",
      "source": "env",
      "config": {
        "apiKeyVar": "OPENAI_API_KEY"
      },
      "cacheTtl": 3600
    },
    "anthropic-api": {
      "type": "simple",
      "source": "env",
      "config": {
        "apiKeyVar": "ANTHROPIC_API_KEY"
      },
      "cacheTtl": 3600
    },
    "aws-production": {
      "type": "aws",
      "source": "env",
      "config": {
        "regionVar": "AWS_REGION",
        "accessKeyIdVar": "AWS_ACCESS_KEY_ID",
        "secretAccessKeyVar": "AWS_SECRET_ACCESS_KEY",
        "sessionTokenVar": "AWS_SESSION_TOKEN"
      },
      "cacheTtl": 1800,
      "rotation": {
        "enabled": false,
        "intervalHours": 24,
        "beforeExpiryHours": 2
      }
    },
    "aws-instance-profile": {
      "type": "aws",
      "source": "env",
      "config": {
        "regionVar": "AWS_REGION",
        "useInstanceProfile": true
      },
      "cacheTtl": 1800
    },
    "google-production": {
      "type": "google",
      "source": "env",
      "config": {
        "projectIdVar": "GOOGLE_PROJECT_ID",
        "regionVar": "GOOGLE_REGION",
        "serviceAccountKeyVar": "GOOGLE_SERVICE_ACCOUNT_KEY"
      },
      "cacheTtl": 1800
    },
    "azure-production": {
      "type": "azure",
      "source": "env",
      "config": {
        "subscriptionIdVar": "AZURE_SUBSCRIPTION_ID",
        "resourceGroupVar": "AZURE_RESOURCE_GROUP",
        "endpointVar": "AZURE_OPENAI_ENDPOINT",
        "clientIdVar": "AZURE_CLIENT_ID",
        "clientSecretVar": "AZURE_CLIENT_SECRET"
      },
      "cacheTtl": 1800
    },
    "together-api": {
      "type": "simple",
      "source": "env",
      "config": {
        "apiKeyVar": "TOGETHER_API_KEY"
      },
      "cacheTtl": 3600
    },
    "groq-api": {
      "type": "simple",
      "source": "env",
      "config": {
        "apiKeyVar": "GROQ_API_KEY"
      },
      "cacheTtl": 3600
    }
  },
  "models": {
    "gpt-4o": {
      "name": "gpt-4o",
      "description": "GPT-4 Omni model with multi-provider support",
      "providers": [
        {
          "name": "openai-primary",
          "provider": "openai",
          "credentialsRef": "openai-api",
          "apiBase": "https://api.openai.com/v1",
          "modelName": "gpt-4o",
          "priority": 1,
          "weight": 100,
          "timeout": 30000,
          "maxRetries": 3,
          "retryDelay": 1000
        },
        {
          "name": "azure-openai-fallback",
          "provider": "azure",
          "credentialsRef": "azure-production",
          "apiBase": "https://${AZURE_RESOURCE_NAME}.openai.azure.com/openai/deployments/${AZURE_DEPLOYMENT_NAME}",
          "modelName": "gpt-4o",
          "priority": 2,
          "weight": 80,
          "timeout": 30000,
          "maxRetries": 3,
          "retryDelay": 1000
        }
      ],
      "defaultParameters": {
        "temperature": 0.7,
        "maxTokens": 4096
      },
      "loadBalancing": {
        "strategy": "fastest-response",
        "stickySessions": false,
        "sessionAffinityTtl": 300,
        "healthCheckWeight": 0.2
      },
      "fallback": {
        "strategy": "priority-based",
        "enabled": true,
        "maxAttempts": 3,
        "delayMs": 1000,
        "backoffMultiplier": 2,
        "enableModelDegradation": false,
        "degradationThresholds": {
          "responseTime": 30000,
          "errorRate": 50
        }
      },
      "circuitBreaker": {
        "enabled": true,
        "failureThreshold": 3,
        "resetTimeout": 60000,
        "monitoringWindow": 300000,
        "minRequestsThreshold": 5,
        "errorThresholdPercentage": 30
      }
    },
    "claude-3-5-sonnet": {
      "name": "claude-3-5-sonnet",
      "description": "Claude 3.5 Sonnet with multi-provider support",
      "providers": [
        {
          "name": "anthropic-primary",
          "provider": "anthropic",
          "credentialsRef": "anthropic-api",
          "apiBase": "https://api.anthropic.com",
          "modelName": "claude-3-5-sonnet-20241022",
          "priority": 1,
          "weight": 100,
          "timeout": 30000,
          "maxRetries": 3,
          "retryDelay": 1000
        },
        {
          "name": "bedrock-fallback",
          "provider": "bedrock",
          "credentialsRef": "aws-production",
          "apiBase": "https://bedrock-runtime.${AWS_REGION}.amazonaws.com",
          "modelName": "anthropic.claude-3-5-sonnet-20241022-v2:0",
          "priority": 2,
          "weight": 80,
          "timeout": 30000,
          "maxRetries": 3,
          "retryDelay": 1000
        }
      ],
      "defaultParameters": {
        "temperature": 0.3,
        "maxTokens": 8192
      },
      "loadBalancing": {
        "strategy": "priority-based",
        "stickySessions": false,
        "sessionAffinityTtl": 300,
        "healthCheckWeight": 0.2
      },
      "fallback": {
        "strategy": "priority-based",
        "enabled": true,
        "maxAttempts": 2,
        "delayMs": 1000,
        "backoffMultiplier": 2,
        "enableModelDegradation": false,
        "degradationThresholds": {
          "responseTime": 30000,
          "errorRate": 40
        }
      },
      "circuitBreaker": {
        "enabled": true,
        "failureThreshold": 2,
        "resetTimeout": 45000,
        "monitoringWindow": 240000,
        "minRequestsThreshold": 3,
        "errorThresholdPercentage": 25
      }
    },
    "llama-3.1-405b": {
      "name": "llama-3.1-405b",
      "description": "Llama 3.1 405B with multiple inference providers",
      "providers": [
        {
          "name": "together-primary",
          "provider": "openai",
          "credentialsRef": "together-api",
          "apiBase": "https://api.together.xyz/v1",
          "modelName": "meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
          "priority": 1,
          "weight": 100,
          "timeout": 45000,
          "maxRetries": 3,
          "retryDelay": 2000
        },
        {
          "name": "groq-fallback",
          "provider": "openai",
          "credentialsRef": "groq-api",
          "apiBase": "https://api.groq.com/openai/v1",
          "modelName": "llama-3.1-405b-reasoning",
          "priority": 2,
          "weight": 90,
          "timeout": 30000,
          "maxRetries": 3,
          "retryDelay": 1000
        },
        {
          "name": "bedrock-backup",
          "provider": "bedrock",
          "credentialsRef": "aws-production",
          "apiBase": "https://bedrock-runtime.${AWS_REGION}.amazonaws.com",
          "modelName": "meta.llama3-1-405b-instruct-v1:0",
          "priority": 3,
          "weight": 70,
          "timeout": 60000,
          "maxRetries": 2,
          "retryDelay": 3000
        }
      ],
      "defaultParameters": {
        "temperature": 0.8,
        "maxTokens": 16384
      },
      "loadBalancing": {
        "strategy": "least-connections",
        "stickySessions": true,
        "sessionAffinityTtl": 600,
        "healthCheckWeight": 0.3
      },
      "fallback": {
        "strategy": "priority-based",
        "enabled": true,
        "maxAttempts": 3,
        "delayMs": 2000,
        "backoffMultiplier": 1.5,
        "enableModelDegradation": true,
        "degradationThresholds": {
          "responseTime": 45000,
          "errorRate": 30
        }
      },
      "circuitBreaker": {
        "enabled": true,
        "failureThreshold": 5,
        "resetTimeout": 120000,
        "monitoringWindow": 600000,
        "minRequestsThreshold": 8,
        "errorThresholdPercentage": 40
      }
    },
    "gemini-pro": {
      "name": "gemini-pro",
      "description": "Google Gemini Pro with Vertex AI fallback",
      "providers": [
        {
          "name": "vertex-ai-primary",
          "provider": "vertex",
          "credentialsRef": "google-production",
          "apiBase": "https://${GOOGLE_REGION}-aiplatform.googleapis.com/v1/projects/${GOOGLE_PROJECT_ID}/locations/${GOOGLE_REGION}/publishers/google/models/gemini-1.5-pro",
          "modelName": "gemini-1.5-pro",
          "priority": 1,
          "weight": 100,
          "timeout": 30000,
          "maxRetries": 3,
          "retryDelay": 1000
        }
      ],
      "defaultParameters": {
        "temperature": 0.6,
        "maxTokens": 8192
      },
      "loadBalancing": {
        "strategy": "round-robin",
        "stickySessions": false,
        "sessionAffinityTtl": 300,
        "healthCheckWeight": 0.2
      },
      "fallback": {
        "strategy": "priority-based",
        "enabled": true,
        "maxAttempts": 2,
        "delayMs": 1000,
        "backoffMultiplier": 2,
        "enableModelDegradation": false,
        "degradationThresholds": {
          "responseTime": 30000,
          "errorRate": 35
        }
      },
      "circuitBreaker": {
        "enabled": true,
        "failureThreshold": 3,
        "resetTimeout": 75000,
        "monitoringWindow": 300000,
        "minRequestsThreshold": 4,
        "errorThresholdPercentage": 30
      }
    }
  }
}
