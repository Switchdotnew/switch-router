name: Docker Build and Push

on:
  push:
    branches:
      - develop
      - master

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for semantic-release

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run unit tests
        run: bun test src/

      - name: Run smoke tests
        run: bun test tests/smoke/

      - name: Type check
        run: bun run typecheck

      - name: Lint
        run: bun run lint:check

      - name: Build
        run: bun run build

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 24
          extra_plugins: |
            @semantic-release/commit-analyzer@13
            @semantic-release/release-notes-generator@14
            @semantic-release/npm@12
            @semantic-release/github@11
            conventional-changelog-conventionalcommits@8

    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

  build:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches

      - name: Set PACKAGE_VERSION from the latest tag
        id: get_version
        run: echo "version=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: llm-router
          PACKAGE_VERSION: ${{ steps.get_version.outputs.version }}
        run: |
          echo "Building image $PACKAGE_VERSION..."
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          echo "Tagging image..."
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$PACKAGE_VERSION
          echo "Pushing image..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$PACKAGE_VERSION

  publish-types:
    needs: release
    if: github.ref == 'refs/heads/master' && needs.release.outputs.new_release_published == 'true'
    permissions:
      contents: read
      id-token: write
    uses: ./.github/workflows/publish-types.yml
    with:
      tag_name: ${{ needs.release.outputs.new_release_version }}
    secrets: inherit
